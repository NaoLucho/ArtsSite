<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseGroup as BaseGroup;
use Doctrine\ORM\Mapping as ORM;
use Builder\PageBundle\Entity\Page;
use Builder\PageBundle\Entity\Content;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * Group
 *
 * @ORM\Table(name="fos_user_group")
 * @ORM\Entity
 */


class Group extends BaseGroup
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\ManyToMany(targetEntity="Builder\PageBundle\Entity\Page", mappedBy="rights", cascade={"persist"})
     */
    private $pages;


    /**
     * @ORM\ManyToMany(targetEntity="Builder\PageBundle\Entity\Content", mappedBy="rights", cascade={"persist"})
     */
    private $contents;

    public function __construct($name, $roles = array())
    {
        parent::__construct($name, $roles);
        $this->pages = new ArrayCollection();
        $this->contents = new ArrayCollection();
    }


    /**
     * @param Page $pages
     */
    public function addPages(Page $page)
    {
        $this->pages[] = $page;
    }

    /**
     * @param Page $pages
     */
    public function removePages(Page $page)
    {
        $this->pages->removeElement($page);
    }

    /**
     * @return mixed
     */
    public function getPages()
    {
        return $this->pages;
    }


    /**
     * @param Content $contents
     */
    public function addContents(Content $content)
    {
        $this->contents[] = $content;
    }


    /**
     * @param Content $contents
     */
    public function removeContents(Content $content)
    {
        $this->contents->removeElement($content);
    }

    /**
     * @return mixed
     */
    public function getContents()
    {
        return $this->contents;
    }

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    // // Correctif trouvé pour un problème incompréhensible:
    // //    Warning: in_array() expects parameter 2 to be array, null given
    // /**
    //  * @param string $role
    //  */
    // public function hasRole($role)
    // {
    //     if($this->roles) return in_array(strtoupper($role), $this->roles, true);
    //     else return false;
    // }
}
